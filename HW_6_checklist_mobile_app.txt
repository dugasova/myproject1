Title																									
Functional testing																									
The installation of the application should take place without significant errors, if the device meets the system requirements.​																									
Verify the aplication atomatically starts correctly																									
Installing / uninstalling / rolling versions																									
Ensure the user manual is available																									
Ensure the application’s operation during startup/exit meets the basic requirements.​																									
Fields testing																									
Verify the required fields work correctly																									
Make sure that mandatory and optional fields are displayed in different ways																									
Navigation between application sections																									
Update testing																									
All user data is saved after updates																									
Ensure the update progress is displayed properly																									
Make sure updates are supported by older operating systems																									
Testing  various ways of installing updates (Wi-Fi, Bluetooth, USB)																									
Usability																									
Make sure that the buttons are of the normal size and placed in one area of the screen																									
Verify the app works in multitasking mode, when necessary.																									
Check the navigation of the important application modules																									
Ensure the icons and pictures look natural in the app environment																									
Verify the color of the buttons that perform the same function is the same																									
The text should be simple, clear and visible to the user. Short sentences and paragraphs are possible to read																									
Ensure correct operation of the Zoom-in and Zoom-out system																									
Verify the context menus are not overloaded																									
Make sure that the application can be terminated by any state and that it resumes operation in the same state																									
Ensure that the application components are synchronized with the user’s actions																									
Verify the user can return or cancel the action if he/she pressed the wrong button																									
Verify the speed of response of the element is high enough																									
Verify responsiveness of applications on different devices																									
Test the main design element: buttons, icons, colors, links, fonts, font sizes, layout, text boxes, text formatting, labels, captions, buttons, lists etc																									
Verify advertising does not overlap application control buttons																									
Ensure the advertising has an accessible closing button																									
Make sure the correct display of various elements on retina and non-retina screens																									
Verify all elements display with portrait and landscape page orientation																									
Performance testing																									
Determine whether the application is running the same under different network conditions																									
Find various application and infrastructure bottlenecks that reduce application performance																									
Evaluate the ability of the app to cope with planned load volumes																									
Verify the response time of the application meets the requirements																									
Check the application stability under conditions of a hard user load																									
Ensure the performance of the application if it works under conditions of a non-permanent connection to the Internet																									
Make sure the existing client-server configuration provides optimal performance																									
Determine whether the application is running the same under different network conditions																									
Security testing																									
Ensure the data of users of the application (logins, passwords, bank card numbers) are protected from network attacks of automated systems and can not be found by selection																									
Protect the application against attacks of the SQL injection type																									
Protect the application and the network from DoS Attacks.																									
Provide session management to protect information from unauthorized users																									
Prevent possible malicious consequences of file caching																									
Examine user files and prevent their possible harmful effects																									
Prevent possible malicious actions of cookies																									
Recovery testing																									
Verify the effective recovery of the application after unforeseen crash scenarios																									
Ensure the process of data recovery after a break in the connection																									
Test the recovery after a system failure and a transaction failure																									
Verify the ability of the application to process transactions in the event of a power failure (low battery, incorrect application shutdown etc.)																									
Android OS																									
Navigation																									
The app supports standard Back button navigation and does not make use of any custom, on-screen "Back button" prompts.																									
From each app screen, rotate the device between landscape and portrait orientation and folding / unfolding at least three times.																									
The app correctly preserves and restores user or app state																									
"The app preserves user or app state when leaving the foreground and prevents accidental data loss due to back-navigation and other state changes.

"																									
When returning to the foreground, the app should restore the preserved state and any significant stateful transaction that was pending.																									
Repeat Core Suite with the app installed to a device’s SD card (if the app supports this installation method)																									
UI and Graphics																									
The app supports both landscape and portrait orientations (if possible). Orientations expose largely the same features and actions and preserve functional parity. Minor changes in content or views are acceptable																									
The app uses the whole screen in both orientations and does not letterbox to account for orientation changes. Minor letterboxing to compensate for small variations in screen geometry is acceptable.																									
The app correctly handles rapid transitions between display orientations without rendering problems or losing state.																									
Battery																									
"Repeat Core Suite across doze and app stendby cycles
"																									
Stability																									
The app does not crash or block the UI thread causing ANR Utilize Google Play’s pre-launch report to identify potential stability issues. After deployment, pay attention to the Android Vitals page in the Google Play developer console.																									
The app loads quickly or provides onscreen feedback to the user (a progress indicator or similar cue) if the app takes longer than two seconds to load.																									
iOS																									
Launching																									
Provide a launch screen																									
Launch in the appropriate orientation																									
Avoid asking for setup information upfront																									
Avoid showing in-app licensing agreements and disclaimers																									
Restore the previous state when your app restarts																									
Don’t encourage rebooting																									
Avoid asking people to rate your app too quickly or too often																									
Loading																									
Make it clear when loading is occurring																									
Show content as soon as possible																									
Educate or entertain people to mask loading time																									
Use progress bars for tasks with a well-defined duration																									
Navigation																									
Always provide a clear path																									
Design an information structure that makes it fast and easy to get to content																									
Use touch gestures to create fluidity																									
Use standard navigation components																									
Use a navigation bar to traverse a hierarchy of data																									
Use a tab bar to present peer categories of content or functionality																									
Use a page control when you have multiple pages of the same type of content																									
Accessing user data																									
Request permission only when your app clearly needs access to the data or resource																									
Request permission at launch only when the data or resource is necessary for your app to function																									
Write copy that clearly describes how your app uses the data or resource you’re requesting																									

